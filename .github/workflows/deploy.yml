name: Deploy Laravel Application
on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install PHP and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, bcmath, zip
        
    - name: Validate Composer
      run: composer validate

    - name: Install Dependencies
      run: |
        composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader --no-dev
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install NPM Dependencies and Build Assets
      run: |
        npm ci
        npm run build
        
    - name: Generate deployment package
      run: |
        mkdir -p deployment
        cp -r app bootstrap config database public resources routes storage vendor composer.json composer.lock artisan deployment/
        
    - name: ðŸ“‚ Deploy to cPanel
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.SERVER }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        server-dir: /home/abdulkco/public_html/laravel/laravel-vuejs-api/
        local-dir: ./deployment/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          .env
          
    - name: Post Deployment Commands
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.SERVER }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        server-dir: /home/abdulkco/public_html/laravel/laravel-vuejs-api/
        local-dir: ./deployment/
        script: |
          php artisan optimize:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          chmod -R 755 storage bootstrap/cache
